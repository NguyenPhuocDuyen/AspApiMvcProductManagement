// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusinessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230207054012_DbInitial")]
    partial class DbInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Confections"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "KATANA"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "FuShi"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "MaleWe"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Posia"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "CamDaka"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Rikiko"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Grains/Cereals"
                        });
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            City = "Can Tho",
                            CompanyName = "ABC",
                            Country = "Viet Nam",
                            Email = "cus1@gmail.com",
                            Password = "cus1@gmail.com"
                        },
                        new
                        {
                            MemberId = 2,
                            City = "MaBu",
                            CompanyName = "Hung Thinh",
                            Country = "HaWai",
                            Email = "cus2@gmail.com",
                            Password = "cus2@gmail.com"
                        },
                        new
                        {
                            MemberId = 3,
                            City = "HaTi",
                            CompanyName = "Hoang Thanh",
                            Country = "New Tork",
                            Email = "cus3@gmail.com",
                            Password = "cus3@gmail.com"
                        },
                        new
                        {
                            MemberId = 4,
                            City = "KuBa",
                            CompanyName = "Iuke",
                            Country = "Canada",
                            Email = "cus4@gmail.com",
                            Password = "cus4@gmail.com"
                        },
                        new
                        {
                            MemberId = 5,
                            City = "AVC",
                            CompanyName = "AVC",
                            Country = "Japan",
                            Email = "cus5@gmail.com",
                            Password = "cus5@gmail.com"
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("MemberId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            MemberId = 3,
                            OrderDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(590),
                            RequiredDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(5854),
                            ShippedDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(5864)
                        },
                        new
                        {
                            OrderId = 2,
                            MemberId = 2,
                            OrderDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6429),
                            RequiredDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6431),
                            ShippedDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6432)
                        },
                        new
                        {
                            OrderId = 3,
                            MemberId = 1,
                            OrderDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6433),
                            RequiredDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6434),
                            ShippedDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6435)
                        },
                        new
                        {
                            OrderId = 4,
                            MemberId = 4,
                            OrderDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6436),
                            RequiredDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6436),
                            ShippedDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6437)
                        },
                        new
                        {
                            OrderId = 5,
                            MemberId = 5,
                            OrderDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6438),
                            RequiredDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6439),
                            ShippedDate = new DateTime(2023, 2, 7, 12, 40, 12, 286, DateTimeKind.Local).AddTicks(6440)
                        });
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderId = 3,
                            ProductId = 5,
                            Discount = 10,
                            Quantity = 11,
                            UnitPrice = 100
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 3,
                            Discount = 10,
                            Quantity = 22,
                            UnitPrice = 99
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Discount = 10,
                            Quantity = 33,
                            UnitPrice = 88
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 4,
                            Discount = 10,
                            Quantity = 44,
                            UnitPrice = 77
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 1,
                            Discount = 10,
                            Quantity = 55,
                            UnitPrice = 12
                        },
                        new
                        {
                            OrderId = 4,
                            ProductId = 2,
                            Discount = 10,
                            Quantity = 44,
                            UnitPrice = 53
                        },
                        new
                        {
                            OrderId = 4,
                            ProductId = 3,
                            Discount = 10,
                            Quantity = 88,
                            UnitPrice = 22
                        },
                        new
                        {
                            OrderId = 5,
                            ProductId = 4,
                            Discount = 10,
                            Quantity = 23,
                            UnitPrice = 76
                        },
                        new
                        {
                            OrderId = 5,
                            ProductId = 5,
                            Discount = 10,
                            Quantity = 44,
                            UnitPrice = 11
                        });
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 5,
                            ProductName = "Iphone",
                            UnitPrice = 10,
                            UnitsInStock = 1,
                            Weight = 10
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4,
                            ProductName = "Sam Sung",
                            UnitPrice = 20,
                            UnitsInStock = 2,
                            Weight = 20
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            ProductName = "Nokia",
                            UnitPrice = 30,
                            UnitsInStock = 3,
                            Weight = 30
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            ProductName = "Huwai",
                            UnitPrice = 40,
                            UnitsInStock = 4,
                            Weight = 40
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            ProductName = "Cuc Gach",
                            UnitPrice = 50,
                            UnitsInStock = 5,
                            Weight = 50
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.HasOne("BusinessObject.Member", "Member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.HasOne("BusinessObject.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.HasOne("BusinessObject.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
